{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "ubuntu",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "sshKeyData": {
            "minLength": "20",
            "type": "string",
            "metadata": {
                "description": "ssh Public Key"
            }
        },
        "clientID": {
            "minLength": "36",
            "maxLength": "36",
            "type": "string",
            "metadata": {
                "description": "AzureService Principal"
            }
        },
        "tenantID": {
            "type": "string",
            "minLength": "36",
            "maxLength": "36",
            "metadata": {
                "description": "AzureService Tenant ID"
            }
        },
        "subscriptionID": {
            "type": "string",
            "minLength": "36",
            "maxLength": "36",
            "metadata": {
                "description": "AzureService Tenant ID"
            }
        },
        "clientSecret": {
            "type": "string",
            "minLength": "36",
            "metadata": {
                "description": "Azure Service Principal Secret"
            }
        },
        "pivnetToken": {
            "type": "string",
            "minLength": "34",
            "maxLength": "34",
            "metadata": {
                "description": "pivnet refresh token"
            }
        },
        "release_id": {
            "type": "string",
            "defaultValue": "259105",
            "metadata": {
                "description": "pivnet release id"
            }
        },
        "env_name": {
            "type": "string",
            "defaultValue": "pcf",
            "metadata": {
                "description": "environment name for azure ( will be ops host name )"
            }
        },
        "env_short_name": {
            "type": "string",
            "minLength": "3",
            "metadata": {
                "description": "will be prefix for pcf terraform resources"
            }
        },
        "ops_manager_image_uri": {
            "type": "string",
            "minLength": "3",
            "defaultValue": "https://opsmanagerwesteurope.blob.core.windows.net/images/ops-manager-2.4-build.131.vhd",
            "metadata": {
                "description": "url for latest osmanager image"
            }
        },
        "pcf_domain_name": {
            "type": "string",
            "minLength": "7",
            "metadata": {
                "description": "dns suffix for pcf"
            }
        },
        "pcf_subdomain_name": {
            "type": "string",
            "minLength": "3",
            "metadata": {
                "description": "subdomain for pcf"
            }
        },
        "net_16_bit_mask": {
            "type": "string",
            "minLength": "3",
            "defaultValue": "10.10",
            "metadata": {
                "description": "first 16 bit of ip range in format xxx.xxx"
            }
        },        
        "notificationsEmail": {
            "type": "string",
            "minLength": "5",
            "defaultValue": "user@example.com",
            "metadata": {
                "description": "subdomain for pcf"
            }
        },
        "smtpAddress": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SMTP Server address, e.g. smtp.sendgrid.net"
            }
        },
        "smtpIdentity": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SMTP Username, e.g. apiuser for sendgrid"
            }
        },         
        "smtpPassword": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SMTP Password, e.g. apikey for sendgrid"
            }
        },
        "smtpFrom": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SMTP sender address"
            }
        },
        "smtpPort": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SMTP port, e.g. 587"
            }
        },
        "smtpStarttls": {
            "type": "string",
            "defaultValue": "false",
            "allowedValues": ["true","false"],
            "metadata": {
                "description": "Default false, true for sendgrid"
            }
        },                                  
        "opsmanUsername": {
            "type": "string",
            "minLength": "5",
            "defaultValue": "opsman",
            "metadata": {
                "description": "subdomain for pcf"
            }
        },
        "pasAutopilot": {
            "type": "string",
            "defaultValue": "TRUE",
            "allowedValues": [
                "FALSE",
                "TRUE"
            ],
            "metadata": {
                "description": "autodeploy pcf pas"
            }
        },
        "pasVersion": {
            "type": "string",
            "defaultValue": "2.4.1"
        },
        "dnsLabelPrefix": {
            "minLength": "3",
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "18.04-LTS",
                "16.04.5-LTS"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/bottkars/pcf-jump-azure/master",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            }
        }
    },
    "variables": {
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "DiagnosticsStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'salinuxvm')]",
        "DiagnosticsStorageAccountType": "Standard_LRS",
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "nicName": "myVMNic",
        "addressPrefix": "10.10.0.0/16",
        "subnetName": "Subnet1",
        "subnetPrefix": "10.10.0.0/24",
        "publicIPAddressName": "myPublicIP",
        "publicIPAddressType": "Dynamic",
        "vmName": "pcfjumphost",
        "vmSize": "Standard_F2s_v2",
        "virtualNetworkName": "jumpVNET",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "baseUri": "https://raw.githubusercontent.com/bottkars/pcf-jump-azure/master",
        "filesToDownload": [
            "[concat(variables('baseUri') , '/scripts/create_certs.sh')]",
            "[concat(variables('baseUri'),  '/scripts/deploy_base.sh')]",
            "[concat(variables('baseUri'),  '/scripts/deploy_pas.sh')]",
            "[concat(variables('baseUri'),  '/scripts/om_init.sh')]",
            "[concat(variables('baseUri'),  '/scripts/pas.yaml')]",
            "[concat(variables('baseUri'),  '/scripts/director_config.yaml')]",
            "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/shared_scripts/ubuntu/vm-disk-utils-0.1.sh"
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('DiagnosticsStorageAccountName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('DiagnosticsStorageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vmName')]",
            "apiVersion": "2018-04-01",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('DiagnosticsStorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "tags": {
                "Application": "PCF PAS Jumpbox",
                "AutoDeployed RG": "[parameters('env_name')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[reference('Microsoft.Resources/deployments/generate-customdata', '2015-01-01').outputs.customData.value]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('sshKeyData')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1200,
                            "lun": 0,
                            "createOption": "Empty",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('DiagnosticsStorageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
                    }
                }
            }
        },
        {
            "name": "generate-customdata",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUri'), '/generate-customdata.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "customData": {
                        "value": {
                            "AZURE_CLIENT_ID": "[parameters('clientID')]",
                            "AZURE_CLIENT_SECRET": "[parameters('clientSecret')]",
                            "ADMIN_USERNAME": "[parameters('adminUsername')]",
                            "AZURE_SUBSCRIPTION_ID": "[parameters('subscriptionID')]",
                            "AZURE_TENANT_ID": "[parameters('tenantID')]",
                            "PCF_PIVNET_UAA_TOKEN": "[parameters('pivnetToken')]",
                            "ENV_NAME": "[parameters('env_name')]",
                            "ENV_SHORT_NAME": "[parameters('env_short_name')]",
                            "OPS_MANAGER_IMAGE_URI": "[parameters('ops_manager_image_uri')]",
                            "LOCATION": "[parameters('location')]",
                            "PCF_DOMAIN_NAME": "[parameters('pcf_domain_name')]",
                            "PCF_SUBDOMAIN_NAME": "[parameters('pcf_subdomain_name')]",
                            "RELEASE_ID": "[parameters('release_id')]",
                            "SSH_PUBLIC_KEY": "[parameters('sshkeyData')]",
                            "PCF_OPSMAN_USERNAME": "[parameters('opsmanUsername')]",
                            "PCF_NOTIFICATIONS_EMAIL": "[parameters('notificationsEmail')]",
                            "NET_16_BIT_MASK": "[parameters('net_16_bit_mask')]",
                            "PAS_AUTOPILOT": "[parameters('pasAutopilot')]",
                            "PCF_PAS_VERSION": "[parameters('pasVersion')]",
                            "SMTP_ADDRESS": "[parameters('smtpAddress')]",
                            "SMTP_IDENTITY": "[parameters('smtpIdentity')]",
                            "SMTP_PASSWORD": "[parameters('smtpPassword')]",
                            "SMTP_FROM": "[parameters('smtpFrom')]",
                            "SMTP_PORT": "[parameters('smtpPort')]",
                            "SMTP_STARTTLS": "[parameters('smtpStarttls')]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),'/initvm')]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": "[variables('filesToDownload')]",
                    "timestamp": 2
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash -l -c \"./deploy_base.sh', ' ', parameters('tenantID'), ' ', parameters('clientID'), ' ', parameters('clientSecret'), ' 2>&1 | tee /home/', parameters('adminUsername'), '/install.log\"')]"
                }
            }
        }
    ],
    "outputs": {
        "hostname": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        },
        "sshCommand": {
            "type": "string",
            "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
        }
    }
}